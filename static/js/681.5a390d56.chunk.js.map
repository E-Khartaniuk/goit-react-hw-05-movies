{"version":3,"file":"static/js/681.5a390d56.chunk.js","mappings":"+PAIe,SAASA,IACtB,OAA8BC,EAAAA,EAAAA,WAAS,GAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCH,EAAAA,EAAAA,UAAS,IAA/C,eAAOK,EAAP,KAAoBC,EAApB,KAgBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAS,mCAAG,2FAChBN,GAAW,GADK,mBAGoBO,EAAAA,EAAAA,IAAgBN,GAHpC,OAGRO,EAHQ,OAIdJ,EAAeI,EAAoBC,KAAKC,SACxCV,GAAW,GALG,gDAOdW,QAAQC,IAAI,6BAAZ,MAPc,yDAAH,qDAWfN,GACD,GAAE,CAACL,KAGF,4BACIF,IAAW,qCACZA,IAAW,wCACZ,wBACGI,EAAYU,KAAI,SAAAC,GAAM,OACrB,2BACE,wBAAKA,EAAOC,UACZ,uBAAID,EAAOE,YAFJF,EAAOG,GADK,QAS9B,C,oKCpCKC,EAAM,mCAEL,SAASC,IAId,OAHiBC,EAAAA,EAAAA,IAAA,gEAC0CF,GAG5D,CAEM,SAASG,EAAiBpB,GAI/B,OAHiBmB,EAAAA,EAAAA,IAAA,6CACuBnB,EADvB,oBAC0CiB,GAG5D,CAEM,SAASI,EAAsBC,GAKpC,OAJiBH,EAAAA,EAAAA,IAAA,4DACsCF,EADtC,kBACmDK,GAIrE,CAEM,SAASC,EAAavB,GAK3B,OAJiBmB,EAAAA,EAAAA,IAAA,6CACuBnB,EADvB,4BACkDiB,GAIpE,CAEM,SAASX,EAAgBN,GAK9B,OAJiBmB,EAAAA,EAAAA,IAAA,6CACuBnB,EADvB,4BACkDiB,GAIpE,C,sBCvCD,SAASO,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQC,EAAKC,GACpE,IACE,IAAIC,EAAOP,EAAIK,GAAKC,GAChBE,EAAQD,EAAKC,KAInB,CAHE,MAAOC,GAEP,YADAP,EAAOO,EAET,CAEIF,EAAKG,KACPT,EAAQO,GAERG,QAAQV,QAAQO,GAAOI,KAAKT,EAAOC,EAEvC,CAEe,SAASS,EAAkBC,GACxC,OAAO,WACL,IAAIC,EAAOC,KACPC,EAAOC,UACX,OAAO,IAAIP,SAAQ,SAAUV,EAASC,GACpC,IAAIF,EAAMc,EAAGK,MAAMJ,EAAME,GAEzB,SAASd,EAAMK,GACbT,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,OAAQI,EAClE,CAEA,SAASJ,EAAOgB,GACdrB,EAAmBC,EAAKC,EAASC,EAAQC,EAAOC,EAAQ,QAASgB,EACnE,CAEAjB,OAAMkB,EACR,GACF,CACF,C","sources":["components/Reviews.jsx","components/getMovieData.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getMovieReviews } from './getMovieData';\n\nexport default function Reviews() {\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const [reviewsData, setReviewsData] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setLoading(true);\n      try {\n        const reviewsResponseData = await getMovieReviews(movieId);\n        setReviewsData(reviewsResponseData.data.results);\n        setLoading(false);\n      } catch (error) {\n        console.log('Error fetching movie data:', error);\n      }\n    };\n\n    fetchData();\n  }, [movieId]);\n\n  return (\n    <div>\n      {!loading && <h2>Reviews:</h2>}\n      {loading && <h2>Loading...</h2>}\n      <ul>\n        {reviewsData.map(review => (\n          <li key={review.id}>\n            <h3>{review.author}</h3>\n            <p>{review.content}</p>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n","import axios from 'axios';\nconst API = '6586f18679356ff078f894039b823aea';\n\nexport function getTrendMovieData() {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/trending/all/day?api_key=${API}`\n  );\n  return response;\n}\n\nexport function getMovieDataById(movieId) {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${API}`\n  );\n  return response;\n}\n\nexport function getMovieDataByRequest(query) {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/search/movie?api_key=${API}&query=${query}`\n  );\n\n  return response;\n}\n\nexport function getMovieCast(movieId) {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${API}`\n  );\n\n  return response;\n}\n\nexport function getMovieReviews(movieId) {\n  const response = axios.get(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${API}`\n  );\n\n  return response;\n}\n\n// export default {\n//   getTrendMovieData,\n//   getMovieDataById,\n//   getMovieDataByRequest,\n//   getMovieCast,\n//   getMovieReviews,\n// };\n\nconst api = {\n  getTrendMovieData,\n  getMovieDataById,\n  getMovieDataByRequest,\n  getMovieCast,\n  getMovieReviews,\n};\n\nexport default api;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","useState","loading","setLoading","movieId","useParams","reviewsData","setReviewsData","useEffect","fetchData","getMovieReviews","reviewsResponseData","data","results","console","log","map","review","author","content","id","API","getTrendMovieData","axios","getMovieDataById","getMovieDataByRequest","query","getMovieCast","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}